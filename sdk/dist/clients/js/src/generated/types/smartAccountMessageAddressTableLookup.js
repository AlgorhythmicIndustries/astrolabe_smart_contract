"use strict";
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSmartAccountMessageAddressTableLookupEncoder = getSmartAccountMessageAddressTableLookupEncoder;
exports.getSmartAccountMessageAddressTableLookupDecoder = getSmartAccountMessageAddressTableLookupDecoder;
exports.getSmartAccountMessageAddressTableLookupCodec = getSmartAccountMessageAddressTableLookupCodec;
const kit_1 = require("@solana/kit");
function getSmartAccountMessageAddressTableLookupEncoder() {
    return (0, kit_1.getStructEncoder)([
        ['accountKey', (0, kit_1.getAddressEncoder)()],
        [
            'writableIndexes',
            (0, kit_1.addEncoderSizePrefix)((0, kit_1.getBytesEncoder)(), (0, kit_1.getU32Encoder)()),
        ],
        [
            'readonlyIndexes',
            (0, kit_1.addEncoderSizePrefix)((0, kit_1.getBytesEncoder)(), (0, kit_1.getU32Encoder)()),
        ],
    ]);
}
function getSmartAccountMessageAddressTableLookupDecoder() {
    return (0, kit_1.getStructDecoder)([
        ['accountKey', (0, kit_1.getAddressDecoder)()],
        [
            'writableIndexes',
            (0, kit_1.addDecoderSizePrefix)((0, kit_1.getBytesDecoder)(), (0, kit_1.getU32Decoder)()),
        ],
        [
            'readonlyIndexes',
            (0, kit_1.addDecoderSizePrefix)((0, kit_1.getBytesDecoder)(), (0, kit_1.getU32Decoder)()),
        ],
    ]);
}
function getSmartAccountMessageAddressTableLookupCodec() {
    return (0, kit_1.combineCodec)(getSmartAccountMessageAddressTableLookupEncoder(), getSmartAccountMessageAddressTableLookupDecoder());
}
