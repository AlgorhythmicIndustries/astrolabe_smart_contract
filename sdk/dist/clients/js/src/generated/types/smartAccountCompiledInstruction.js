"use strict";
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSmartAccountCompiledInstructionCodec = exports.getSmartAccountCompiledInstructionDecoder = exports.getSmartAccountCompiledInstructionEncoder = void 0;
const kit_1 = require("@solana/kit");
function getSmartAccountCompiledInstructionEncoder() {
    return (0, kit_1.getStructEncoder)([
        ['programIdIndex', (0, kit_1.getU8Encoder)()],
        [
            'accountIndexes',
            (0, kit_1.addEncoderSizePrefix)((0, kit_1.getBytesEncoder)(), (0, kit_1.getU32Encoder)()),
        ],
        ['data', (0, kit_1.addEncoderSizePrefix)((0, kit_1.getBytesEncoder)(), (0, kit_1.getU32Encoder)())],
    ]);
}
exports.getSmartAccountCompiledInstructionEncoder = getSmartAccountCompiledInstructionEncoder;
function getSmartAccountCompiledInstructionDecoder() {
    return (0, kit_1.getStructDecoder)([
        ['programIdIndex', (0, kit_1.getU8Decoder)()],
        [
            'accountIndexes',
            (0, kit_1.addDecoderSizePrefix)((0, kit_1.getBytesDecoder)(), (0, kit_1.getU32Decoder)()),
        ],
        ['data', (0, kit_1.addDecoderSizePrefix)((0, kit_1.getBytesDecoder)(), (0, kit_1.getU32Decoder)())],
    ]);
}
exports.getSmartAccountCompiledInstructionDecoder = getSmartAccountCompiledInstructionDecoder;
function getSmartAccountCompiledInstructionCodec() {
    return (0, kit_1.combineCodec)(getSmartAccountCompiledInstructionEncoder(), getSmartAccountCompiledInstructionDecoder());
}
exports.getSmartAccountCompiledInstructionCodec = getSmartAccountCompiledInstructionCodec;
