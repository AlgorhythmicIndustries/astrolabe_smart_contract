"use strict";
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isProposalStatus = exports.proposalStatus = exports.getProposalStatusCodec = exports.getProposalStatusDecoder = exports.getProposalStatusEncoder = void 0;
const kit_1 = require("@solana/kit");
function getProposalStatusEncoder() {
    return (0, kit_1.getDiscriminatedUnionEncoder)([
        ['Draft', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Active', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Rejected', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Approved', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Executing', (0, kit_1.getUnitEncoder)()],
        ['Executed', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Cancelled', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
    ]);
}
exports.getProposalStatusEncoder = getProposalStatusEncoder;
function getProposalStatusDecoder() {
    return (0, kit_1.getDiscriminatedUnionDecoder)([
        ['Draft', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Active', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Rejected', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Approved', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Executing', (0, kit_1.getUnitDecoder)()],
        ['Executed', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Cancelled', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
    ]);
}
exports.getProposalStatusDecoder = getProposalStatusDecoder;
function getProposalStatusCodec() {
    return (0, kit_1.combineCodec)(getProposalStatusEncoder(), getProposalStatusDecoder());
}
exports.getProposalStatusCodec = getProposalStatusCodec;
function proposalStatus(kind, data) {
    return Array.isArray(data)
        ? { __kind: kind, fields: data }
        : { __kind: kind, ...(data ?? {}) };
}
exports.proposalStatus = proposalStatus;
function isProposalStatus(kind, value) {
    return value.__kind === kind;
}
exports.isProposalStatus = isProposalStatus;
