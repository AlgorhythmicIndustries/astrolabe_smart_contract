"use strict";
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCreateTransactionArgsCodec = exports.getCreateTransactionArgsDecoder = exports.getCreateTransactionArgsEncoder = void 0;
const kit_1 = require("@solana/kit");
function getCreateTransactionArgsEncoder() {
    return (0, kit_1.getStructEncoder)([
        ['accountIndex', (0, kit_1.getU8Encoder)()],
        ['accountBump', (0, kit_1.getU8Encoder)()],
        ['ephemeralSigners', (0, kit_1.getU8Encoder)()],
        [
            'transactionMessage',
            (0, kit_1.addEncoderSizePrefix)((0, kit_1.getBytesEncoder)(), (0, kit_1.getU32Encoder)()),
        ],
        [
            'memo',
            (0, kit_1.getOptionEncoder)((0, kit_1.addEncoderSizePrefix)((0, kit_1.getUtf8Encoder)(), (0, kit_1.getU32Encoder)())),
        ],
    ]);
}
exports.getCreateTransactionArgsEncoder = getCreateTransactionArgsEncoder;
function getCreateTransactionArgsDecoder() {
    return (0, kit_1.getStructDecoder)([
        ['accountIndex', (0, kit_1.getU8Decoder)()],
        ['accountBump', (0, kit_1.getU8Decoder)()],
        ['ephemeralSigners', (0, kit_1.getU8Decoder)()],
        [
            'transactionMessage',
            (0, kit_1.addDecoderSizePrefix)((0, kit_1.getBytesDecoder)(), (0, kit_1.getU32Decoder)()),
        ],
        [
            'memo',
            (0, kit_1.getOptionDecoder)((0, kit_1.addDecoderSizePrefix)((0, kit_1.getUtf8Decoder)(), (0, kit_1.getU32Decoder)())),
        ],
    ]);
}
exports.getCreateTransactionArgsDecoder = getCreateTransactionArgsDecoder;
function getCreateTransactionArgsCodec() {
    return (0, kit_1.combineCodec)(getCreateTransactionArgsEncoder(), getCreateTransactionArgsDecoder());
}
exports.getCreateTransactionArgsCodec = getCreateTransactionArgsCodec;
