/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Address, type Codec, type Decoder, type Encoder, type IAccountMeta, type IAccountSignerMeta, type IInstruction, type IInstructionWithAccounts, type IInstructionWithData, type ReadonlyAccount, type ReadonlySignerAccount, type ReadonlyUint8Array, type TransactionSigner, type WritableAccount, type WritableSignerAccount } from '@solana/kit';
import { ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS } from '../programs';
import { type CreateTransactionArgs, type CreateTransactionArgsArgs } from '../types';
export declare const CREATE_TRANSACTION_DISCRIMINATOR: Uint8Array;
export declare function getCreateTransactionDiscriminatorBytes(): ReadonlyUint8Array;
export type CreateTransactionInstruction<TProgram extends string = typeof ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS, TAccountSettings extends string | IAccountMeta<string> = string, TAccountTransaction extends string | IAccountMeta<string> = string, TAccountCreator extends string | IAccountMeta<string> = string, TAccountRentPayer extends string | IAccountMeta<string> = string, TAccountSystemProgram extends string | IAccountMeta<string> = '11111111111111111111111111111111', TRemainingAccounts extends readonly IAccountMeta<string>[] = []> = IInstruction<TProgram> & IInstructionWithData<Uint8Array> & IInstructionWithAccounts<[
    TAccountSettings extends string ? WritableAccount<TAccountSettings> : TAccountSettings,
    TAccountTransaction extends string ? WritableAccount<TAccountTransaction> : TAccountTransaction,
    TAccountCreator extends string ? ReadonlySignerAccount<TAccountCreator> & IAccountSignerMeta<TAccountCreator> : TAccountCreator,
    TAccountRentPayer extends string ? WritableSignerAccount<TAccountRentPayer> & IAccountSignerMeta<TAccountRentPayer> : TAccountRentPayer,
    TAccountSystemProgram extends string ? ReadonlyAccount<TAccountSystemProgram> : TAccountSystemProgram,
    ...TRemainingAccounts
]>;
export type CreateTransactionInstructionData = {
    discriminator: ReadonlyUint8Array;
    args: CreateTransactionArgs;
};
export type CreateTransactionInstructionDataArgs = {
    args: CreateTransactionArgsArgs;
};
export declare function getCreateTransactionInstructionDataEncoder(): Encoder<CreateTransactionInstructionDataArgs>;
export declare function getCreateTransactionInstructionDataDecoder(): Decoder<CreateTransactionInstructionData>;
export declare function getCreateTransactionInstructionDataCodec(): Codec<CreateTransactionInstructionDataArgs, CreateTransactionInstructionData>;
export type CreateTransactionInput<TAccountSettings extends string = string, TAccountTransaction extends string = string, TAccountCreator extends string = string, TAccountRentPayer extends string = string, TAccountSystemProgram extends string = string> = {
    settings: Address<TAccountSettings>;
    transaction: Address<TAccountTransaction>;
    /** The member of the multisig that is creating the transaction. */
    creator: TransactionSigner<TAccountCreator>;
    /** The payer for the transaction account rent. */
    rentPayer: TransactionSigner<TAccountRentPayer>;
    systemProgram?: Address<TAccountSystemProgram>;
    args: CreateTransactionInstructionDataArgs['args'];
};
export declare function getCreateTransactionInstruction<TAccountSettings extends string, TAccountTransaction extends string, TAccountCreator extends string, TAccountRentPayer extends string, TAccountSystemProgram extends string, TProgramAddress extends Address = typeof ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS>(input: CreateTransactionInput<TAccountSettings, TAccountTransaction, TAccountCreator, TAccountRentPayer, TAccountSystemProgram>, config?: {
    programAddress?: TProgramAddress;
}): CreateTransactionInstruction<TProgramAddress, TAccountSettings, TAccountTransaction, TAccountCreator, TAccountRentPayer, TAccountSystemProgram>;
export type ParsedCreateTransactionInstruction<TProgram extends string = typeof ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS, TAccountMetas extends readonly IAccountMeta[] = readonly IAccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        settings: TAccountMetas[0];
        transaction: TAccountMetas[1];
        /** The member of the multisig that is creating the transaction. */
        creator: TAccountMetas[2];
        /** The payer for the transaction account rent. */
        rentPayer: TAccountMetas[3];
        systemProgram: TAccountMetas[4];
    };
    data: CreateTransactionInstructionData;
};
export declare function parseCreateTransactionInstruction<TProgram extends string, TAccountMetas extends readonly IAccountMeta[]>(instruction: IInstruction<TProgram> & IInstructionWithAccounts<TAccountMetas> & IInstructionWithData<Uint8Array>): ParsedCreateTransactionInstruction<TProgram, TAccountMetas>;
