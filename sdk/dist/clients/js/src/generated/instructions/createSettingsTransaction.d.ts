/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type AccountMeta, type AccountSignerMeta, type Address, type Codec, type Decoder, type Encoder, type Instruction, type InstructionWithAccounts, type InstructionWithData, type Option, type OptionOrNullable, type ReadonlyAccount, type ReadonlySignerAccount, type ReadonlyUint8Array, type TransactionSigner, type WritableAccount, type WritableSignerAccount } from '@solana/kit';
import { ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS } from '../programs';
import { type SettingsAction, type SettingsActionArgs } from '../types';
export declare const CREATE_SETTINGS_TRANSACTION_DISCRIMINATOR: Uint8Array<ArrayBuffer>;
export declare function getCreateSettingsTransactionDiscriminatorBytes(): ReadonlyUint8Array;
export type CreateSettingsTransactionInstruction<TProgram extends string = typeof ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS, TAccountSettings extends string | AccountMeta<string> = string, TAccountTransaction extends string | AccountMeta<string> = string, TAccountCreator extends string | AccountMeta<string> = string, TAccountRentPayer extends string | AccountMeta<string> = string, TAccountSystemProgram extends string | AccountMeta<string> = '11111111111111111111111111111111', TRemainingAccounts extends readonly AccountMeta<string>[] = []> = Instruction<TProgram> & InstructionWithData<ReadonlyUint8Array> & InstructionWithAccounts<[
    TAccountSettings extends string ? WritableAccount<TAccountSettings> : TAccountSettings,
    TAccountTransaction extends string ? WritableAccount<TAccountTransaction> : TAccountTransaction,
    TAccountCreator extends string ? ReadonlySignerAccount<TAccountCreator> & AccountSignerMeta<TAccountCreator> : TAccountCreator,
    TAccountRentPayer extends string ? WritableSignerAccount<TAccountRentPayer> & AccountSignerMeta<TAccountRentPayer> : TAccountRentPayer,
    TAccountSystemProgram extends string ? ReadonlyAccount<TAccountSystemProgram> : TAccountSystemProgram,
    ...TRemainingAccounts
]>;
export type CreateSettingsTransactionInstructionData = {
    discriminator: ReadonlyUint8Array;
    actions: Array<SettingsAction>;
    memo: Option<string>;
};
export type CreateSettingsTransactionInstructionDataArgs = {
    actions: Array<SettingsActionArgs>;
    memo: OptionOrNullable<string>;
};
export declare function getCreateSettingsTransactionInstructionDataEncoder(): Encoder<CreateSettingsTransactionInstructionDataArgs>;
export declare function getCreateSettingsTransactionInstructionDataDecoder(): Decoder<CreateSettingsTransactionInstructionData>;
export declare function getCreateSettingsTransactionInstructionDataCodec(): Codec<CreateSettingsTransactionInstructionDataArgs, CreateSettingsTransactionInstructionData>;
export type CreateSettingsTransactionInput<TAccountSettings extends string = string, TAccountTransaction extends string = string, TAccountCreator extends string = string, TAccountRentPayer extends string = string, TAccountSystemProgram extends string = string> = {
    settings: Address<TAccountSettings>;
    transaction: Address<TAccountTransaction>;
    /** The signer on the smart account that is creating the transaction. */
    creator: TransactionSigner<TAccountCreator>;
    /** The payer for the transaction account rent. */
    rentPayer: TransactionSigner<TAccountRentPayer>;
    systemProgram?: Address<TAccountSystemProgram>;
    actions: CreateSettingsTransactionInstructionDataArgs['actions'];
    memo: CreateSettingsTransactionInstructionDataArgs['memo'];
};
export declare function getCreateSettingsTransactionInstruction<TAccountSettings extends string, TAccountTransaction extends string, TAccountCreator extends string, TAccountRentPayer extends string, TAccountSystemProgram extends string, TProgramAddress extends Address = typeof ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS>(input: CreateSettingsTransactionInput<TAccountSettings, TAccountTransaction, TAccountCreator, TAccountRentPayer, TAccountSystemProgram>, config?: {
    programAddress?: TProgramAddress;
}): CreateSettingsTransactionInstruction<TProgramAddress, TAccountSettings, TAccountTransaction, TAccountCreator, TAccountRentPayer, TAccountSystemProgram>;
export type ParsedCreateSettingsTransactionInstruction<TProgram extends string = typeof ASTROLABE_SMART_ACCOUNT_PROGRAM_ADDRESS, TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        settings: TAccountMetas[0];
        transaction: TAccountMetas[1];
        /** The signer on the smart account that is creating the transaction. */
        creator: TAccountMetas[2];
        /** The payer for the transaction account rent. */
        rentPayer: TAccountMetas[3];
        systemProgram: TAccountMetas[4];
    };
    data: CreateSettingsTransactionInstructionData;
};
export declare function parseCreateSettingsTransactionInstruction<TProgram extends string, TAccountMetas extends readonly AccountMeta[]>(instruction: Instruction<TProgram> & InstructionWithAccounts<TAccountMetas> & InstructionWithData<ReadonlyUint8Array>): ParsedCreateSettingsTransactionInstruction<TProgram, TAccountMetas>;
