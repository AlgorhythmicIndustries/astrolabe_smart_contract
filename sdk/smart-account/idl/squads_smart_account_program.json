{
  "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML",
  "metadata": {
    "name": "squads_smart_account_program",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Squads Smart Account Program V0.1",
    "address": "97Xsunnsy4C6EET3V3cd2bSd1ArLcdUcihD8CKEjdS4c",
    "origin": "anchor",
    "binaryVersion": "0.31.1",
    "libVersion": "=0.31.1"
  },
  "instructions": [
    {
      "name": "activate_proposal",
      "docs": [
        "Update status of a smart account proposal from `Draft` to `Active`."
      ],
      "discriminator": [
        90,
        186,
        203,
        234,
        70,
        185,
        191,
        21
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "proposal",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "proposal.transaction_index",
                "account": "Proposal"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": []
    },
    {
      "name": "add_signer_as_authority",
      "docs": [
        "Add a new signer to the controlled smart account."
      ],
      "discriminator": [
        80,
        198,
        228,
        154,
        7,
        234,
        99,
        56
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged or credited in case the settings account needs to reallocate space,",
            "for example when adding a new signer or a spending limit.",
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "AddSignerArgs"
            }
          }
        }
      ]
    },
    {
      "name": "add_spending_limit_as_authority",
      "docs": [
        "Create a new spending limit for the controlled smart account."
      ],
      "discriminator": [
        169,
        189,
        84,
        54,
        30,
        244,
        223,
        212
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "spending_limit",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  115,
                  112,
                  101,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  108,
                  105,
                  109,
                  105,
                  116
                ]
              },
              {
                "kind": "arg",
                "path": "args.seed"
              }
            ]
          }
        },
        {
          "name": "rent_payer",
          "docs": [
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "AddSpendingLimitArgs"
            }
          }
        }
      ]
    },
    {
      "name": "add_transaction_to_batch",
      "docs": [
        "Add a transaction to the batch."
      ],
      "discriminator": [
        147,
        75,
        197,
        227,
        20,
        149,
        150,
        113
      ],
      "accounts": [
        {
          "name": "settings",
          "docs": [
            "Settings account this batch belongs to."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "proposal",
          "docs": [
            "The proposal account associated with the batch."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.index",
                "account": "Batch"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "batch",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.index",
                "account": "Batch"
              }
            ]
          }
        },
        {
          "name": "transaction",
          "docs": [
            "`BatchTransaction` account to initialize and add to the `batch`."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.index",
                "account": "Batch"
              },
              {
                "kind": "const",
                "value": [
                  98,
                  97,
                  116,
                  99,
                  104,
                  95,
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.size.checked_add(1)",
                "account": "Batch"
              }
            ]
          }
        },
        {
          "name": "signer",
          "docs": [
            "Signer of the smart account."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The payer for the batch transaction account rent."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "AddTransactionToBatchArgs"
            }
          }
        }
      ]
    },
    {
      "name": "approve_proposal",
      "docs": [
        "Approve a smart account proposal on behalf of the `member`.",
        "The proposal must be `Active`."
      ],
      "discriminator": [
        136,
        108,
        102,
        85,
        98,
        114,
        7,
        147
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "proposal",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "proposal.transaction_index",
                "account": "Proposal"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "optional": true,
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "VoteOnProposalArgs"
            }
          }
        }
      ]
    },
    {
      "name": "cancel_proposal",
      "docs": [
        "Cancel a smart account proposal on behalf of the `member`.",
        "The proposal must be `Approved`."
      ],
      "discriminator": [
        106,
        74,
        128,
        146,
        19,
        65,
        39,
        23
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "proposal",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "proposal.transaction_index",
                "account": "Proposal"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "optional": true,
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "VoteOnProposalArgs"
            }
          }
        }
      ]
    },
    {
      "name": "change_threshold_as_authority",
      "docs": [
        "Set the `threshold` config parameter for the controlled smart account."
      ],
      "discriminator": [
        51,
        141,
        78,
        133,
        70,
        47,
        95,
        124
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged or credited in case the settings account needs to reallocate space,",
            "for example when adding a new signer or a spending limit.",
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "ChangeThresholdArgs"
            }
          }
        }
      ]
    },
    {
      "name": "close_batch",
      "docs": [
        "Closes Batch and the corresponding Proposal accounts for proposals in terminal states:",
        "`Executed`, `Rejected`, or `Cancelled` or stale proposals that aren't `Approved`.",
        "",
        "This instruction is only allowed to be executed when all `VaultBatchTransaction` accounts",
        "in the `batch` are already closed: `batch.size == 0`."
      ],
      "discriminator": [
        166,
        174,
        35,
        253,
        209,
        211,
        181,
        28
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          },
          "relations": [
            "batch"
          ]
        },
        {
          "name": "proposal",
          "docs": [
            "the logic within `close_batch` does the rest of the checks."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.index",
                "account": "Batch"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "batch",
          "docs": [
            "`Batch` corresponding to the `proposal`."
          ],
          "writable": true
        },
        {
          "name": "proposal_rent_collector",
          "docs": [
            "The rent collector for the proposal account."
          ],
          "writable": true
        },
        {
          "name": "batch_rent_collector",
          "docs": [
            "The rent collector."
          ],
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "close_batch_transaction",
      "docs": [
        "Closes a `BatchTransaction` belonging to the `batch` and `proposal`.",
        "`transaction` can be closed if either:",
        "- it's marked as executed within the `batch`;",
        "- the `proposal` is in a terminal state: `Executed`, `Rejected`, or `Cancelled`.",
        "- the `proposal` is stale and not `Approved`."
      ],
      "discriminator": [
        86,
        144,
        133,
        225,
        45,
        209,
        62,
        251
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          },
          "relations": [
            "proposal",
            "batch"
          ]
        },
        {
          "name": "proposal"
        },
        {
          "name": "batch",
          "docs": [
            "`Batch` corresponding to the `proposal`."
          ],
          "writable": true
        },
        {
          "name": "transaction",
          "docs": [
            "`BatchTransaction` account to close.",
            "The transaction must be the current last one in the batch."
          ],
          "writable": true
        },
        {
          "name": "transaction_rent_collector",
          "docs": [
            "The rent collector."
          ],
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "close_settings_transaction",
      "docs": [
        "Closes a `SettingsTransaction` and the corresponding `Proposal`.",
        "`transaction` can be closed if either:",
        "- the `proposal` is in a terminal state: `Executed`, `Rejected`, or `Cancelled`.",
        "- the `proposal` is stale."
      ],
      "discriminator": [
        251,
        112,
        34,
        108,
        214,
        13,
        41,
        116
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          },
          "relations": [
            "transaction"
          ]
        },
        {
          "name": "proposal",
          "docs": [
            "the logic within `settings_transaction_close` does the rest of the checks."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "transaction.index",
                "account": "SettingsTransaction"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "transaction",
          "docs": [
            "SettingsTransaction corresponding to the `proposal`."
          ],
          "writable": true
        },
        {
          "name": "proposal_rent_collector",
          "docs": [
            "The rent payer for the proposal account."
          ],
          "writable": true
        },
        {
          "name": "transaction_rent_collector",
          "docs": [
            "The rent collector."
          ],
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "close_transaction",
      "docs": [
        "Closes a `Transaction` and the corresponding `Proposal`.",
        "`transaction` can be closed if either:",
        "- the `proposal` is in a terminal state: `Executed`, `Rejected`, or `Cancelled`.",
        "- the `proposal` is stale and not `Approved`."
      ],
      "discriminator": [
        97,
        46,
        152,
        170,
        42,
        215,
        192,
        218
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          },
          "relations": [
            "transaction"
          ]
        },
        {
          "name": "proposal",
          "docs": [
            "the logic within `transaction_close` does the rest of the checks."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "transaction.index",
                "account": "Transaction"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "transaction",
          "docs": [
            "Transaction corresponding to the `proposal`."
          ],
          "writable": true
        },
        {
          "name": "proposal_rent_collector",
          "docs": [
            "The rent collector for the proposal account."
          ],
          "writable": true
        },
        {
          "name": "transaction_rent_collector",
          "docs": [
            "The rent collector."
          ],
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "close_transaction_buffer",
      "docs": [
        "Close a transaction buffer account."
      ],
      "discriminator": [
        224,
        221,
        123,
        213,
        0,
        204,
        5,
        191
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "transaction_buffer",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110,
                  95,
                  98,
                  117,
                  102,
                  102,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "creator"
              },
              {
                "kind": "account",
                "path": "transaction_buffer.buffer_index",
                "account": "TransactionBuffer"
              }
            ]
          }
        },
        {
          "name": "creator",
          "docs": [
            "The signer on the smart account that created the TransactionBuffer."
          ],
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "create_batch",
      "docs": [
        "Create a new batch."
      ],
      "discriminator": [
        159,
        198,
        248,
        43,
        248,
        31,
        235,
        86
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "batch",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "settings.transaction_index.checked_add(1)",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "creator",
          "docs": [
            "The signer of the settings that is creating the batch."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The payer for the batch account rent."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateBatchArgs"
            }
          }
        }
      ]
    },
    {
      "name": "create_proposal",
      "docs": [
        "Create a new smart account proposal."
      ],
      "discriminator": [
        132,
        116,
        68,
        174,
        216,
        160,
        198,
        22
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "proposal",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "arg",
                "path": "args.transaction_index"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "creator",
          "docs": [
            "The signer on the smart account that is creating the proposal."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The payer for the proposal account rent."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateProposalArgs"
            }
          }
        }
      ]
    },
    {
      "name": "create_settings_transaction",
      "docs": [
        "Create a new settings transaction."
      ],
      "discriminator": [
        101,
        168,
        254,
        203,
        222,
        102,
        95,
        192
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "transaction",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "settings.transaction_index.checked_add(1)",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "creator",
          "docs": [
            "The signer on the smart account that is creating the transaction."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The payer for the transaction account rent."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateSettingsTransactionArgs"
            }
          }
        }
      ]
    },
    {
      "name": "create_smart_account",
      "docs": [
        "Create a smart account."
      ],
      "discriminator": [
        197,
        102,
        253,
        231,
        77,
        84,
        50,
        17
      ],
      "accounts": [
        {
          "name": "program_config",
          "docs": [
            "Global program config account."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  103,
                  114,
                  97,
                  109,
                  95,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "treasury",
          "docs": [
            "The treasury where the creation fee is transferred to."
          ],
          "writable": true
        },
        {
          "name": "creator",
          "docs": [
            "The creator of the smart account."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateSmartAccountArgs"
            }
          }
        }
      ]
    },
    {
      "name": "create_transaction",
      "docs": [
        "Create a new vault transaction."
      ],
      "discriminator": [
        227,
        193,
        53,
        239,
        55,
        126,
        112,
        105
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "transaction",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "settings.transaction_index.checked_add(1)",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "creator",
          "docs": [
            "The member of the multisig that is creating the transaction."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The payer for the transaction account rent."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateTransactionArgs"
            }
          }
        }
      ]
    },
    {
      "name": "create_transaction_buffer",
      "docs": [
        "Create a transaction buffer account."
      ],
      "discriminator": [
        57,
        97,
        250,
        156,
        59,
        211,
        32,
        208
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "transaction_buffer",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110,
                  95,
                  98,
                  117,
                  102,
                  102,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "creator"
              },
              {
                "kind": "arg",
                "path": "args.buffer_index"
              }
            ]
          }
        },
        {
          "name": "creator",
          "docs": [
            "The signer on the smart account that is creating the transaction."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The payer for the transaction account rent."
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateTransactionBufferArgs"
            }
          }
        }
      ]
    },
    {
      "name": "create_transaction_from_buffer",
      "docs": [
        "Create a new vault transaction from a completed transaction buffer.",
        "Finalized buffer hash must match `final_buffer_hash`"
      ],
      "discriminator": [
        53,
        192,
        39,
        239,
        124,
        84,
        43,
        249
      ],
      "accounts": [
        {
          "name": "transaction_create",
          "accounts": [
            {
              "name": "settings",
              "writable": true,
              "pda": {
                "seeds": [
                  {
                    "kind": "const",
                    "value": [
                      115,
                      109,
                      97,
                      114,
                      116,
                      95,
                      97,
                      99,
                      99,
                      111,
                      117,
                      110,
                      116
                    ]
                  },
                  {
                    "kind": "const",
                    "value": [
                      115,
                      101,
                      116,
                      116,
                      105,
                      110,
                      103,
                      115
                    ]
                  },
                  {
                    "kind": "account",
                    "path": "settings.seed",
                    "account": "Settings"
                  }
                ]
              }
            },
            {
              "name": "transaction",
              "writable": true,
              "pda": {
                "seeds": [
                  {
                    "kind": "const",
                    "value": [
                      115,
                      109,
                      97,
                      114,
                      116,
                      95,
                      97,
                      99,
                      99,
                      111,
                      117,
                      110,
                      116
                    ]
                  },
                  {
                    "kind": "account",
                    "path": "settings"
                  },
                  {
                    "kind": "const",
                    "value": [
                      116,
                      114,
                      97,
                      110,
                      115,
                      97,
                      99,
                      116,
                      105,
                      111,
                      110
                    ]
                  },
                  {
                    "kind": "account",
                    "path": "settings.transaction_index.checked_add(1)",
                    "account": "Settings"
                  }
                ]
              }
            },
            {
              "name": "creator",
              "docs": [
                "The member of the multisig that is creating the transaction."
              ],
              "signer": true
            },
            {
              "name": "rent_payer",
              "docs": [
                "The payer for the transaction account rent."
              ],
              "writable": true,
              "signer": true
            },
            {
              "name": "system_program",
              "address": "11111111111111111111111111111111"
            }
          ]
        },
        {
          "name": "transaction_buffer",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "transaction_create.settings",
                "account": "CreateTransaction"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110,
                  95,
                  98,
                  117,
                  102,
                  102,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "creator"
              },
              {
                "kind": "account",
                "path": "transaction_buffer.buffer_index",
                "account": "TransactionBuffer"
              }
            ]
          }
        },
        {
          "name": "creator",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "CreateTransactionArgs"
            }
          }
        }
      ]
    },
    {
      "name": "execute_batch_transaction",
      "docs": [
        "Execute a transaction from the batch."
      ],
      "discriminator": [
        237,
        67,
        201,
        173,
        33,
        130,
        88,
        134
      ],
      "accounts": [
        {
          "name": "settings",
          "docs": [
            "Settings account this batch belongs to."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "signer",
          "docs": [
            "Signer of the settings."
          ],
          "signer": true
        },
        {
          "name": "proposal",
          "docs": [
            "The proposal account associated with the batch.",
            "If `transaction` is the last in the batch, the `proposal` status will be set to `Executed`."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.index",
                "account": "Batch"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "batch",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.index",
                "account": "Batch"
              }
            ]
          }
        },
        {
          "name": "transaction",
          "docs": [
            "Batch transaction to execute."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.index",
                "account": "Batch"
              },
              {
                "kind": "const",
                "value": [
                  98,
                  97,
                  116,
                  99,
                  104,
                  95,
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "batch.executed_transaction_index.checked_add(1)",
                "account": "Batch"
              }
            ]
          }
        }
      ],
      "args": []
    },
    {
      "name": "execute_settings_transaction",
      "docs": [
        "Execute a settings transaction.",
        "The transaction must be `Approved`."
      ],
      "discriminator": [
        131,
        210,
        27,
        88,
        27,
        204,
        143,
        189
      ],
      "accounts": [
        {
          "name": "settings",
          "docs": [
            "The settings account of the smart account that owns the transaction."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "signer",
          "docs": [
            "The signer on the smart account that is executing the transaction."
          ],
          "signer": true
        },
        {
          "name": "proposal",
          "docs": [
            "The proposal account associated with the transaction."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "transaction.index",
                "account": "SettingsTransaction"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "transaction",
          "docs": [
            "The transaction to execute."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "transaction.index",
                "account": "SettingsTransaction"
              }
            ]
          }
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged/credited in case the settings transaction causes space reallocation,",
            "for example when adding a new signer, adding or removing a spending limit.",
            "This is usually the same as `signer`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "execute_settings_transaction_sync",
      "docs": [
        "Synchronously execute a config transaction"
      ],
      "discriminator": [
        138,
        209,
        64,
        163,
        79,
        67,
        233,
        76
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged/credited in case the settings transaction causes space reallocation,",
            "for example when adding a new signer, adding or removing a spending limit.",
            "This is usually the same as `signer`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "SyncSettingsTransactionArgs"
            }
          }
        }
      ]
    },
    {
      "name": "execute_transaction",
      "docs": [
        "Execute a smart account transaction.",
        "The transaction must be `Approved`."
      ],
      "discriminator": [
        231,
        173,
        49,
        91,
        235,
        24,
        68,
        19
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "proposal",
          "docs": [
            "The proposal account associated with the transaction."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "transaction.index",
                "account": "Transaction"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "transaction",
          "docs": [
            "The transaction to execute."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "transaction.index",
                "account": "Transaction"
              }
            ]
          }
        },
        {
          "name": "signer",
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "execute_transaction_sync",
      "docs": [
        "Synchronously execute a transaction"
      ],
      "discriminator": [
        43,
        102,
        248,
        89,
        231,
        97,
        104,
        134
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "SyncTransactionArgs"
            }
          }
        }
      ]
    },
    {
      "name": "extend_transaction_buffer",
      "docs": [
        "Extend a transaction buffer account."
      ],
      "discriminator": [
        190,
        86,
        246,
        95,
        231,
        154,
        229,
        91
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "transaction_buffer",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110,
                  95,
                  98,
                  117,
                  102,
                  102,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "creator"
              },
              {
                "kind": "account",
                "path": "transaction_buffer.buffer_index",
                "account": "TransactionBuffer"
              }
            ]
          }
        },
        {
          "name": "creator",
          "docs": [
            "The signer on the smart account that created the TransactionBuffer."
          ],
          "signer": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "ExtendTransactionBufferArgs"
            }
          }
        }
      ]
    },
    {
      "name": "initialize_program_config",
      "docs": [
        "Initialize the program config."
      ],
      "discriminator": [
        6,
        131,
        61,
        237,
        40,
        110,
        83,
        124
      ],
      "accounts": [
        {
          "name": "program_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  103,
                  114,
                  97,
                  109,
                  95,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "initializer",
          "docs": [
            "The hard-coded account that is used to initialize the program config once."
          ],
          "writable": true,
          "signer": true,
          "address": "init9xckLHfofCRp5SCisRK4f6eDehGRtFSAw5mLhE8"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "InitProgramConfigArgs"
            }
          }
        }
      ]
    },
    {
      "name": "log_event",
      "docs": [
        "Log an event"
      ],
      "discriminator": [
        5,
        9,
        90,
        141,
        223,
        134,
        57,
        217
      ],
      "accounts": [
        {
          "name": "log_authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "LogEventArgs"
            }
          }
        }
      ]
    },
    {
      "name": "reject_proposal",
      "docs": [
        "Reject a smart account proposal on behalf of the `member`.",
        "The proposal must be `Active`."
      ],
      "discriminator": [
        114,
        162,
        164,
        82,
        191,
        11,
        102,
        25
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "proposal",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  97,
                  110,
                  115,
                  97,
                  99,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "proposal.transaction_index",
                "account": "Proposal"
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  112,
                  111,
                  115,
                  97,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "optional": true,
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "VoteOnProposalArgs"
            }
          }
        }
      ]
    },
    {
      "name": "remove_signer_as_authority",
      "docs": [
        "Remove a signer from the controlled smart account."
      ],
      "discriminator": [
        58,
        19,
        149,
        16,
        181,
        16,
        125,
        148
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged or credited in case the settings account needs to reallocate space,",
            "for example when adding a new signer or a spending limit.",
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "RemoveSignerArgs"
            }
          }
        }
      ]
    },
    {
      "name": "remove_spending_limit_as_authority",
      "docs": [
        "Remove the spending limit from the controlled smart account."
      ],
      "discriminator": [
        94,
        32,
        68,
        127,
        251,
        44,
        145,
        7
      ],
      "accounts": [
        {
          "name": "settings",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "spending_limit",
          "writable": true
        },
        {
          "name": "rent_collector",
          "docs": [
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "RemoveSpendingLimitArgs"
            }
          }
        }
      ]
    },
    {
      "name": "set_archival_authority_as_authority",
      "docs": [
        "Set the smart account `archival_authority`."
      ],
      "discriminator": [
        178,
        199,
        4,
        13,
        237,
        234,
        152,
        202
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged or credited in case the settings account needs to reallocate space,",
            "for example when adding a new signer or a spending limit.",
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "SetArchivalAuthorityArgs"
            }
          }
        }
      ]
    },
    {
      "name": "set_new_settings_authority_as_authority",
      "docs": [
        "Set the smart account `settings_authority`."
      ],
      "discriminator": [
        221,
        112,
        133,
        229,
        146,
        58,
        90,
        56
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged or credited in case the settings account needs to reallocate space,",
            "for example when adding a new signer or a spending limit.",
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "SetNewSettingsAuthorityArgs"
            }
          }
        }
      ]
    },
    {
      "name": "set_program_config_authority",
      "docs": [
        "Set the `authority` parameter of the program config."
      ],
      "discriminator": [
        130,
        40,
        234,
        111,
        237,
        155,
        246,
        203
      ],
      "accounts": [
        {
          "name": "program_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  103,
                  114,
                  97,
                  109,
                  95,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "ProgramConfigSetAuthorityArgs"
            }
          }
        }
      ]
    },
    {
      "name": "set_program_config_smart_account_creation_fee",
      "docs": [
        "Set the `smart_account_creation_fee` parameter of the program config."
      ],
      "discriminator": [
        222,
        30,
        134,
        176,
        131,
        113,
        195,
        202
      ],
      "accounts": [
        {
          "name": "program_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  103,
                  114,
                  97,
                  109,
                  95,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "ProgramConfigSetSmartAccountCreationFeeArgs"
            }
          }
        }
      ]
    },
    {
      "name": "set_program_config_treasury",
      "docs": [
        "Set the `treasury` parameter of the program config."
      ],
      "discriminator": [
        244,
        119,
        192,
        190,
        182,
        101,
        227,
        189
      ],
      "accounts": [
        {
          "name": "program_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  103,
                  114,
                  97,
                  109,
                  95,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "ProgramConfigSetTreasuryArgs"
            }
          }
        }
      ]
    },
    {
      "name": "set_time_lock_as_authority",
      "docs": [
        "Set the `time_lock` config parameter for the controlled smart account."
      ],
      "discriminator": [
        2,
        234,
        93,
        93,
        40,
        92,
        31,
        234
      ],
      "accounts": [
        {
          "name": "settings",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "settings_authority",
          "docs": [
            "Settings `settings_authority` that must authorize the configuration change."
          ],
          "signer": true
        },
        {
          "name": "rent_payer",
          "docs": [
            "The account that will be charged or credited in case the settings account needs to reallocate space,",
            "for example when adding a new signer or a spending limit.",
            "This is usually the same as `settings_authority`, but can be a different account if needed."
          ],
          "writable": true,
          "signer": true,
          "optional": true
        },
        {
          "name": "system_program",
          "docs": [
            "We might need it in case reallocation is needed."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "SetTimeLockArgs"
            }
          }
        }
      ]
    },
    {
      "name": "use_spending_limit",
      "docs": [
        "Use a spending limit to transfer tokens from a smart account vault to a destination account."
      ],
      "discriminator": [
        41,
        179,
        70,
        5,
        194,
        147,
        239,
        158
      ],
      "accounts": [
        {
          "name": "settings",
          "docs": [
            "The settings the `spending_limit` belongs to."
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "const",
                "value": [
                  115,
                  101,
                  116,
                  116,
                  105,
                  110,
                  103,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "settings.seed",
                "account": "Settings"
              }
            ]
          }
        },
        {
          "name": "signer",
          "signer": true
        },
        {
          "name": "spending_limit",
          "docs": [
            "The SpendingLimit account to use."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  115,
                  112,
                  101,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  108,
                  105,
                  109,
                  105,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "spending_limit.seed",
                "account": "SpendingLimit"
              }
            ]
          }
        },
        {
          "name": "smart_account",
          "docs": [
            "Smart account to transfer tokens from."
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "settings"
              },
              {
                "kind": "const",
                "value": [
                  115,
                  109,
                  97,
                  114,
                  116,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "spending_limit.account_index",
                "account": "SpendingLimit"
              }
            ]
          }
        },
        {
          "name": "destination",
          "docs": [
            "Destination account to transfer tokens to."
          ],
          "writable": true
        },
        {
          "name": "system_program",
          "docs": [
            "In case `spending_limit.mint` is SOL."
          ],
          "optional": true,
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "mint",
          "docs": [
            "The mint of the tokens to transfer in case `spending_limit.mint` is an SPL token."
          ],
          "optional": true
        },
        {
          "name": "smart_account_token_account",
          "docs": [
            "Smart account token account to transfer tokens from in case `spending_limit.mint` is an SPL token."
          ],
          "writable": true,
          "optional": true
        },
        {
          "name": "destination_token_account",
          "docs": [
            "Destination token account in case `spending_limit.mint` is an SPL token."
          ],
          "writable": true,
          "optional": true
        },
        {
          "name": "token_program",
          "docs": [
            "In case `spending_limit.mint` is an SPL token."
          ],
          "optional": true
        },
        {
          "name": "program",
          "address": "7tWVnAHd8LLNDx3nWEzBF3dWYUAVRsASxnTqdhJ9aMML"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "UseSpendingLimitArgs"
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Batch",
      "discriminator": [
        156,
        194,
        70,
        44,
        22,
        88,
        137,
        44
      ]
    },
    {
      "name": "BatchTransaction",
      "discriminator": [
        92,
        20,
        61,
        146,
        155,
        62,
        112,
        72
      ]
    },
    {
      "name": "ProgramConfig",
      "discriminator": [
        196,
        210,
        90,
        231,
        144,
        149,
        140,
        63
      ]
    },
    {
      "name": "Proposal",
      "discriminator": [
        26,
        94,
        189,
        187,
        116,
        136,
        53,
        33
      ]
    },
    {
      "name": "Settings",
      "discriminator": [
        223,
        179,
        163,
        190,
        177,
        224,
        67,
        173
      ]
    },
    {
      "name": "SettingsTransaction",
      "discriminator": [
        199,
        151,
        72,
        87,
        77,
        124,
        16,
        0
      ]
    },
    {
      "name": "SpendingLimit",
      "discriminator": [
        10,
        201,
        27,
        160,
        218,
        195,
        222,
        152
      ]
    },
    {
      "name": "Transaction",
      "discriminator": [
        11,
        24,
        174,
        129,
        203,
        117,
        242,
        23
      ]
    },
    {
      "name": "TransactionBuffer",
      "discriminator": [
        90,
        36,
        35,
        219,
        93,
        225,
        110,
        96
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "AccountNotEmpty",
      "msg": "Account is not empty"
    },
    {
      "code": 6001,
      "name": "DuplicateSigner",
      "msg": "Found multiple signers with the same pubkey"
    },
    {
      "code": 6002,
      "name": "EmptySigners",
      "msg": "Signers array is empty"
    },
    {
      "code": 6003,
      "name": "TooManySigners",
      "msg": "Too many signers, can be up to 65535"
    },
    {
      "code": 6004,
      "name": "InvalidThreshold",
      "msg": "Invalid threshold, must be between 1 and number of signers with vote permissions"
    },
    {
      "code": 6005,
      "name": "Unauthorized",
      "msg": "Attempted to perform an unauthorized action"
    },
    {
      "code": 6006,
      "name": "NotASigner",
      "msg": "Provided pubkey is not a signer of the smart account"
    },
    {
      "code": 6007,
      "name": "InvalidTransactionMessage",
      "msg": "TransactionMessage is malformed."
    },
    {
      "code": 6008,
      "name": "StaleProposal",
      "msg": "Proposal is stale"
    },
    {
      "code": 6009,
      "name": "InvalidProposalStatus",
      "msg": "Invalid proposal status"
    },
    {
      "code": 6010,
      "name": "InvalidTransactionIndex",
      "msg": "Invalid transaction index"
    },
    {
      "code": 6011,
      "name": "AlreadyApproved",
      "msg": "Signer already approved the transaction"
    },
    {
      "code": 6012,
      "name": "AlreadyRejected",
      "msg": "Signer already rejected the transaction"
    },
    {
      "code": 6013,
      "name": "AlreadyCancelled",
      "msg": "Signer already cancelled the transaction"
    },
    {
      "code": 6014,
      "name": "InvalidNumberOfAccounts",
      "msg": "Wrong number of accounts provided"
    },
    {
      "code": 6015,
      "name": "InvalidAccount",
      "msg": "Invalid account provided"
    },
    {
      "code": 6016,
      "name": "RemoveLastSigner",
      "msg": "Cannot remove last signer"
    },
    {
      "code": 6017,
      "name": "NoVoters",
      "msg": "Signers don't include any voters"
    },
    {
      "code": 6018,
      "name": "NoProposers",
      "msg": "Signers don't include any proposers"
    },
    {
      "code": 6019,
      "name": "NoExecutors",
      "msg": "Signers don't include any executors"
    },
    {
      "code": 6020,
      "name": "InvalidStaleTransactionIndex",
      "msg": "`stale_transaction_index` must be <= `transaction_index`"
    },
    {
      "code": 6021,
      "name": "NotSupportedForControlled",
      "msg": "Instruction not supported for controlled smart account"
    },
    {
      "code": 6022,
      "name": "TimeLockNotReleased",
      "msg": "Proposal time lock has not been released"
    },
    {
      "code": 6023,
      "name": "NoActions",
      "msg": "Config transaction must have at least one action"
    },
    {
      "code": 6024,
      "name": "MissingAccount",
      "msg": "Missing account"
    },
    {
      "code": 6025,
      "name": "InvalidMint",
      "msg": "Invalid mint"
    },
    {
      "code": 6026,
      "name": "InvalidDestination",
      "msg": "Invalid destination"
    },
    {
      "code": 6027,
      "name": "SpendingLimitExceeded",
      "msg": "Spending limit exceeded"
    },
    {
      "code": 6028,
      "name": "DecimalsMismatch",
      "msg": "Decimals don't match the mint"
    },
    {
      "code": 6029,
      "name": "SpendingLimitExpired",
      "msg": "Spending limit is expired"
    },
    {
      "code": 6030,
      "name": "UnknownPermission",
      "msg": "Signer has unknown permission"
    },
    {
      "code": 6031,
      "name": "ProtectedAccount",
      "msg": "Account is protected, it cannot be passed into a CPI as writable"
    },
    {
      "code": 6032,
      "name": "TimeLockExceedsMaxAllowed",
      "msg": "Time lock exceeds the maximum allowed (90 days)"
    },
    {
      "code": 6033,
      "name": "IllegalAccountOwner",
      "msg": "Account is not owned by Smart Account program"
    },
    {
      "code": 6034,
      "name": "RentReclamationDisabled",
      "msg": "Rent reclamation is disabled for this smart account"
    },
    {
      "code": 6035,
      "name": "InvalidRentCollector",
      "msg": "Invalid rent collector address"
    },
    {
      "code": 6036,
      "name": "ProposalForAnotherSmartAccount",
      "msg": "Proposal is for another smart account"
    },
    {
      "code": 6037,
      "name": "TransactionForAnotherSmartAccount",
      "msg": "Transaction is for another smart account"
    },
    {
      "code": 6038,
      "name": "TransactionNotMatchingProposal",
      "msg": "Transaction doesn't match proposal"
    },
    {
      "code": 6039,
      "name": "TransactionNotLastInBatch",
      "msg": "Transaction is not last in batch"
    },
    {
      "code": 6040,
      "name": "BatchNotEmpty",
      "msg": "Batch is not empty"
    },
    {
      "code": 6041,
      "name": "SpendingLimitInvalidAmount",
      "msg": "Invalid SpendingLimit amount"
    },
    {
      "code": 6042,
      "name": "InvalidInstructionArgs",
      "msg": "Invalid Instruction Arguments"
    },
    {
      "code": 6043,
      "name": "FinalBufferHashMismatch",
      "msg": "Final message buffer hash doesnt match the expected hash"
    },
    {
      "code": 6044,
      "name": "FinalBufferSizeExceeded",
      "msg": "Final buffer size cannot exceed 4000 bytes"
    },
    {
      "code": 6045,
      "name": "FinalBufferSizeMismatch",
      "msg": "Final buffer size mismatch"
    },
    {
      "code": 6046,
      "name": "SmartAccountCreateDeprecated",
      "msg": "smart_account_create has been deprecated. Use smart_account_create_v2 instead."
    },
    {
      "code": 6047,
      "name": "ThresholdNotReached",
      "msg": "Signers do not reach consensus threshold"
    },
    {
      "code": 6048,
      "name": "InvalidSignerCount",
      "msg": "Invalid number of signer accounts. Must be greater or equal to the threshold"
    },
    {
      "code": 6049,
      "name": "MissingSignature",
      "msg": "Missing signature"
    },
    {
      "code": 6050,
      "name": "InsufficientAggregatePermissions",
      "msg": "Insufficient aggregate permissions across signing members"
    },
    {
      "code": 6051,
      "name": "InsufficientVotePermissions",
      "msg": "Insufficient vote permissions across signing members"
    },
    {
      "code": 6052,
      "name": "TimeLockNotZero",
      "msg": "Smart account must not be time locked"
    },
    {
      "code": 6053,
      "name": "NotImplemented",
      "msg": "Feature not implemented"
    }
  ],
  "types": [
    {
      "name": "AddSignerArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_signer",
            "type": {
              "defined": {
                "name": "SmartAccountSigner"
              }
            }
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "AddSpendingLimitArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "seed",
            "docs": [
              "Key that is used to seed the SpendingLimit PDA."
            ],
            "type": "pubkey"
          },
          {
            "name": "account_index",
            "docs": [
              "The index of the smart account that the spending limit is for."
            ],
            "type": "u8"
          },
          {
            "name": "mint",
            "docs": [
              "The token mint the spending limit is for."
            ],
            "type": "pubkey"
          },
          {
            "name": "amount",
            "docs": [
              "The amount of tokens that can be spent in a period.",
              "This amount is in decimals of the mint,",
              "so 1 SOL would be `1_000_000_000` and 1 USDC would be `1_000_000`."
            ],
            "type": "u64"
          },
          {
            "name": "period",
            "docs": [
              "The reset period of the spending limit.",
              "When it passes, the remaining amount is reset, unless it's `Period::OneTime`."
            ],
            "type": {
              "defined": {
                "name": "Period"
              }
            }
          },
          {
            "name": "signers",
            "docs": [
              "Signers of the Spending Limit that can use it.",
              "Don't have to be signers of the settings."
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "destinations",
            "docs": [
              "The destination addresses the spending limit is allowed to sent funds to.",
              "If empty, funds can be sent to any address."
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "expiration",
            "docs": [
              "The expiration timestamp of the spending limit.",
              "Non expiring spending limits are set to `i64::MAX`."
            ],
            "type": "i64"
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "AddTransactionToBatchArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "ephemeral_signers",
            "docs": [
              "Number of ephemeral signing PDAs required by the transaction."
            ],
            "type": "u8"
          },
          {
            "name": "transaction_message",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "Batch",
      "docs": [
        "Stores data required for serial execution of a batch of smart account transactions.",
        "A smart account transaction is a transaction that's executed on behalf of the smart account",
        "and wraps arbitrary Solana instructions, typically calling into other Solana programs.",
        "The transactions themselves are stored in separate PDAs associated with the this account."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings",
            "docs": [
              "The settings this belongs to."
            ],
            "type": "pubkey"
          },
          {
            "name": "creator",
            "docs": [
              "Signer of the smart account who submitted the batch."
            ],
            "type": "pubkey"
          },
          {
            "name": "rent_collector",
            "docs": [
              "The rent collector for the batch account."
            ],
            "type": "pubkey"
          },
          {
            "name": "index",
            "docs": [
              "Index of this batch within the smart account transactions."
            ],
            "type": "u64"
          },
          {
            "name": "bump",
            "docs": [
              "PDA bump."
            ],
            "type": "u8"
          },
          {
            "name": "account_index",
            "docs": [
              "Index of the smart account this batch belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "account_bump",
            "docs": [
              "Derivation bump of the smart account PDA this batch belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "size",
            "docs": [
              "Number of transactions in the batch."
            ],
            "type": "u32"
          },
          {
            "name": "executed_transaction_index",
            "docs": [
              "Index of the last executed transaction within the batch.",
              "0 means that no transactions have been executed yet."
            ],
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "BatchTransaction",
      "docs": [
        "Stores data required for execution of one transaction from a batch."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "docs": [
              "PDA bump."
            ],
            "type": "u8"
          },
          {
            "name": "rent_collector",
            "docs": [
              "The rent collector for the batch transaction account."
            ],
            "type": "pubkey"
          },
          {
            "name": "ephemeral_signer_bumps",
            "docs": [
              "Derivation bumps for additional signers.",
              "Some transactions require multiple signers. Often these additional signers are \"ephemeral\" keypairs",
              "that are generated on the client with a sole purpose of signing the transaction and be discarded immediately after.",
              "When wrapping such transactions into Smart Account ones, we replace these \"ephemeral\" signing keypairs",
              "with PDAs derived from the transaction's `transaction_index` and controlled by the Smart Account Program;",
              "during execution the program includes the seeds of these PDAs into the `invoke_signed` calls,",
              "thus \"signing\" on behalf of these PDAs."
            ],
            "type": "bytes"
          },
          {
            "name": "message",
            "docs": [
              "data required for executing the transaction."
            ],
            "type": {
              "defined": {
                "name": "SmartAccountTransactionMessage"
              }
            }
          }
        ]
      }
    },
    {
      "name": "ChangeThresholdArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_threshold",
            "type": "u16"
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "CreateBatchArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_index",
            "docs": [
              "Index of the smart account this batch belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "memo",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "CreateProposalArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "transaction_index",
            "docs": [
              "Index of the smart account transaction this proposal is associated with."
            ],
            "type": "u64"
          },
          {
            "name": "draft",
            "docs": [
              "Whether the proposal should be initialized with status `Draft`."
            ],
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "CreateSettingsTransactionArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "actions",
            "type": {
              "vec": {
                "defined": {
                  "name": "SettingsAction"
                }
              }
            }
          },
          {
            "name": "memo",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "CreateSmartAccountArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings_authority",
            "docs": [
              "The authority that can configure the smart account: add/remove signers, change the threshold, etc.",
              "Should be set to `None` for autonomous smart accounts."
            ],
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "threshold",
            "docs": [
              "The number of signatures required to execute a transaction."
            ],
            "type": "u16"
          },
          {
            "name": "signers",
            "docs": [
              "The signers on the smart account."
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "SmartAccountSigner"
                }
              }
            }
          },
          {
            "name": "restricted_signers",
            "docs": [
              "The restricted signers on the smart account."
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "RestrictedSmartAccountSigner"
                }
              }
            }
          },
          {
            "name": "time_lock",
            "docs": [
              "How many seconds must pass between transaction voting, settlement, and execution."
            ],
            "type": "u32"
          },
          {
            "name": "rent_collector",
            "docs": [
              "The address where the rent for the accounts related to executed, rejected, or cancelled",
              "transactions can be reclaimed. If set to `None`, the rent reclamation feature is turned off."
            ],
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "CreateTransactionArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_index",
            "docs": [
              "Index of the smart account this transaction belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "ephemeral_signers",
            "docs": [
              "Number of ephemeral signing PDAs required by the transaction."
            ],
            "type": "u8"
          },
          {
            "name": "transaction_message",
            "type": "bytes"
          },
          {
            "name": "memo",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "CreateTransactionBufferArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "buffer_index",
            "docs": [
              "Index of the buffer account to seed the account derivation"
            ],
            "type": "u8"
          },
          {
            "name": "account_index",
            "docs": [
              "Index of the smart account this transaction belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "final_buffer_hash",
            "docs": [
              "Hash of the final assembled transaction message."
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "final_buffer_size",
            "docs": [
              "Final size of the buffer."
            ],
            "type": "u16"
          },
          {
            "name": "buffer",
            "docs": [
              "Initial slice of the buffer."
            ],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "ExtendTransactionBufferArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "buffer",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "InitProgramConfigArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "docs": [
              "The authority that can configure the program config: change the treasury, etc."
            ],
            "type": "pubkey"
          },
          {
            "name": "smart_account_creation_fee",
            "docs": [
              "The fee that is charged for creating a new smart account."
            ],
            "type": "u64"
          },
          {
            "name": "treasury",
            "docs": [
              "The treasury where the creation fee is transferred to."
            ],
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "LogEventArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_seeds",
            "type": {
              "vec": "bytes"
            }
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "event",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "Period",
      "docs": [
        "The reset period of the spending limit."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "OneTime"
          },
          {
            "name": "Day"
          },
          {
            "name": "Week"
          },
          {
            "name": "Month"
          }
        ]
      }
    },
    {
      "name": "Permissions",
      "docs": [
        "Bitmask for permissions."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mask",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ProgramConfig",
      "docs": [
        "Global program configuration account."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "smart_account_index",
            "docs": [
              "Counter for the number of smart accounts created."
            ],
            "type": "u128"
          },
          {
            "name": "authority",
            "docs": [
              "The authority which can update the config."
            ],
            "type": "pubkey"
          },
          {
            "name": "smart_account_creation_fee",
            "docs": [
              "The lamports amount charged for creating a new smart account.",
              "This fee is sent to the `treasury` account."
            ],
            "type": "u64"
          },
          {
            "name": "treasury",
            "docs": [
              "The treasury account to send charged fees to."
            ],
            "type": "pubkey"
          },
          {
            "name": "_reserved",
            "docs": [
              "Reserved for future use."
            ],
            "type": {
              "array": [
                "u8",
                64
              ]
            }
          }
        ]
      }
    },
    {
      "name": "ProgramConfigSetAuthorityArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_authority",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "ProgramConfigSetSmartAccountCreationFeeArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_smart_account_creation_fee",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ProgramConfigSetTreasuryArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_treasury",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "Proposal",
      "docs": [
        "Stores the data required for tracking the status of a smart account proposal.",
        "Each `Proposal` has a 1:1 association with a transaction account, e.g. a `Transaction` or a `SettingsTransaction`;",
        "the latter can be executed only after the `Proposal` has been approved and its time lock is released."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings",
            "docs": [
              "The settings this belongs to."
            ],
            "type": "pubkey"
          },
          {
            "name": "transaction_index",
            "docs": [
              "Index of the smart account transaction this proposal is associated with."
            ],
            "type": "u64"
          },
          {
            "name": "rent_collector",
            "docs": [
              "The rent collector for the proposal account."
            ],
            "type": "pubkey"
          },
          {
            "name": "status",
            "docs": [
              "The status of the transaction."
            ],
            "type": {
              "defined": {
                "name": "ProposalStatus"
              }
            }
          },
          {
            "name": "bump",
            "docs": [
              "PDA bump."
            ],
            "type": "u8"
          },
          {
            "name": "approved",
            "docs": [
              "Keys that have approved/signed."
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "rejected",
            "docs": [
              "Keys that have rejected."
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "cancelled",
            "docs": [
              "Keys that have cancelled (Approved only)."
            ],
            "type": {
              "vec": "pubkey"
            }
          }
        ]
      }
    },
    {
      "name": "ProposalStatus",
      "docs": [
        "The status of a proposal.",
        "Each variant wraps a timestamp of when the status was set."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Draft",
            "fields": [
              {
                "name": "timestamp",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Active",
            "fields": [
              {
                "name": "timestamp",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Rejected",
            "fields": [
              {
                "name": "timestamp",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Approved",
            "fields": [
              {
                "name": "timestamp",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Executing"
          },
          {
            "name": "Executed",
            "fields": [
              {
                "name": "timestamp",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Cancelled",
            "fields": [
              {
                "name": "timestamp",
                "type": "i64"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "RemoveSignerArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "old_signer",
            "type": "pubkey"
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "RemoveSpendingLimitArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "RestrictedPermissions",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mask",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "RestrictedSmartAccountSigner",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": "pubkey"
          },
          {
            "name": "restricted_permissions",
            "type": {
              "defined": {
                "name": "RestrictedPermissions"
              }
            }
          }
        ]
      }
    },
    {
      "name": "SetArchivalAuthorityArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_archival_authority",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "SetNewSettingsAuthorityArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "new_settings_authority",
            "type": "pubkey"
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "SetTimeLockArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "time_lock",
            "type": "u32"
          },
          {
            "name": "memo",
            "docs": [
              "Memo is used for indexing only."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "Settings",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "seed",
            "docs": [
              "An integer that is used seed the settings PDA. Its incremented by 1",
              "inside the program conifg by 1 for each smart account created. This is",
              "to ensure uniqueness of each settings PDA without relying on user input.",
              "",
              "Note: As this represents a DOS vector in the current creation architecture,",
              "account creation will be permissioned until compression is implemented."
            ],
            "type": "u128"
          },
          {
            "name": "settings_authority",
            "docs": [
              "The authority that can change the smart account settings.",
              "This is a very important parameter as this authority can change the signers and threshold.",
              "",
              "The convention is to set this to `Pubkey::default()`.",
              "In this case, the smart account becomes autonomous, so every settings change goes through",
              "the normal process of voting by the signers.",
              "",
              "However, if this parameter is set to any other key, all the setting changes for this smart account settings",
              "will need to be signed by the `settings_authority`. We call such a smart account a \"controlled smart account\"."
            ],
            "type": "pubkey"
          },
          {
            "name": "threshold",
            "docs": [
              "Threshold for signatures."
            ],
            "type": "u16"
          },
          {
            "name": "time_lock",
            "docs": [
              "How many seconds must pass between transaction voting settlement and execution."
            ],
            "type": "u32"
          },
          {
            "name": "transaction_index",
            "docs": [
              "Last transaction index. 0 means no transactions have been created."
            ],
            "type": "u64"
          },
          {
            "name": "stale_transaction_index",
            "docs": [
              "Last stale transaction index. All transactions up until this index are stale.",
              "This index is updated when smart account settings (signers/threshold/time_lock) change."
            ],
            "type": "u64"
          },
          {
            "name": "archival_authority",
            "docs": [
              "Field reserved for when archival/compression is implemented.",
              "Will be set to Pubkey::default() to mark accounts that should",
              "be eligible for archival before the feature is implemented."
            ],
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "archivable_after",
            "docs": [
              "Field that will prevent a smart account from being archived immediately after unarchival.",
              "This is to prevent a DOS vector where the archival authority could",
              "constantly unarchive and archive the smart account to prevent it from",
              "being used."
            ],
            "type": "u64"
          },
          {
            "name": "bump",
            "docs": [
              "Bump for the smart account PDA seed."
            ],
            "type": "u8"
          },
          {
            "name": "signers",
            "docs": [
              "Signers attached to the smart account"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "SmartAccountSigner"
                }
              }
            }
          },
          {
            "name": "restricted_signers",
            "type": {
              "vec": {
                "defined": {
                  "name": "RestrictedSmartAccountSigner"
                }
              }
            }
          },
          {
            "name": "account_utilization",
            "docs": [
              "Counter for how many sub accounts are in use (improves off-chain indexing)"
            ],
            "type": "u8"
          },
          {
            "name": "_reserved1",
            "type": "u8"
          },
          {
            "name": "_reserved2",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "SettingsAction",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "AddSigner",
            "fields": [
              {
                "name": "new_signer",
                "type": {
                  "defined": {
                    "name": "SmartAccountSigner"
                  }
                }
              }
            ]
          },
          {
            "name": "RemoveSigner",
            "fields": [
              {
                "name": "old_signer",
                "type": "pubkey"
              }
            ]
          },
          {
            "name": "ChangeThreshold",
            "fields": [
              {
                "name": "new_threshold",
                "type": "u16"
              }
            ]
          },
          {
            "name": "SetTimeLock",
            "fields": [
              {
                "name": "new_time_lock",
                "type": "u32"
              }
            ]
          },
          {
            "name": "AddSpendingLimit",
            "fields": [
              {
                "name": "seed",
                "docs": [
                  "Key that is used to seed the SpendingLimit PDA."
                ],
                "type": "pubkey"
              },
              {
                "name": "account_index",
                "docs": [
                  "The index of the account that the spending limit is for."
                ],
                "type": "u8"
              },
              {
                "name": "mint",
                "docs": [
                  "The token mint the spending limit is for."
                ],
                "type": "pubkey"
              },
              {
                "name": "amount",
                "docs": [
                  "The amount of tokens that can be spent in a period.",
                  "This amount is in decimals of the mint,",
                  "so 1 SOL would be `1_000_000_000` and 1 USDC would be `1_000_000`."
                ],
                "type": "u64"
              },
              {
                "name": "period",
                "docs": [
                  "The reset period of the spending limit.",
                  "When it passes, the remaining amount is reset, unless it's `Period::OneTime`."
                ],
                "type": {
                  "defined": {
                    "name": "Period"
                  }
                }
              },
              {
                "name": "signers",
                "docs": [
                  "Members of the settings that can use the spending limit.",
                  "In case a member is removed from the settings, the spending limit will remain existent",
                  "(until explicitly deleted), but the removed member will not be able to use it anymore."
                ],
                "type": {
                  "vec": "pubkey"
                }
              },
              {
                "name": "destinations",
                "docs": [
                  "The destination addresses the spending limit is allowed to sent funds to.",
                  "If empty, funds can be sent to any address."
                ],
                "type": {
                  "vec": "pubkey"
                }
              },
              {
                "name": "expiration",
                "docs": [
                  "The expiration timestamp of the spending limit.",
                  "Non expiring spending limits are set to `i64::MAX`."
                ],
                "type": "i64"
              }
            ]
          },
          {
            "name": "RemoveSpendingLimit",
            "fields": [
              {
                "name": "spending_limit",
                "type": "pubkey"
              }
            ]
          },
          {
            "name": "SetArchivalAuthority",
            "fields": [
              {
                "name": "new_archival_authority",
                "type": {
                  "option": "pubkey"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "SettingsTransaction",
      "docs": [
        "Stores data required for execution of a settings configuration transaction.",
        "Settings transactions can perform a predefined set of actions on the Settings PDA, such as adding/removing members,",
        "changing the threshold, etc."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings",
            "docs": [
              "The settings this belongs to."
            ],
            "type": "pubkey"
          },
          {
            "name": "creator",
            "docs": [
              "Signer on the settings who submitted the transaction."
            ],
            "type": "pubkey"
          },
          {
            "name": "rent_collector",
            "docs": [
              "The rent collector for the settings transaction account."
            ],
            "type": "pubkey"
          },
          {
            "name": "index",
            "docs": [
              "Index of this transaction within the settings."
            ],
            "type": "u64"
          },
          {
            "name": "bump",
            "docs": [
              "bump for the transaction seeds."
            ],
            "type": "u8"
          },
          {
            "name": "actions",
            "docs": [
              "Action to be performed on the settings."
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "SettingsAction"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "SmartAccountCompiledInstruction",
      "docs": [
        "Concise serialization schema for instructions that make up a transaction.",
        "Closely mimics the Solana transaction wire format."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "program_id_index",
            "type": "u8"
          },
          {
            "name": "account_indexes",
            "docs": [
              "Indices into the tx's `account_keys` list indicating which accounts to pass to the instruction."
            ],
            "type": "bytes"
          },
          {
            "name": "data",
            "docs": [
              "Instruction data."
            ],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "SmartAccountMessageAddressTableLookup",
      "docs": [
        "Address table lookups describe an on-chain address lookup table to use",
        "for loading more readonly and writable accounts into a transaction."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_key",
            "docs": [
              "Address lookup table account key."
            ],
            "type": "pubkey"
          },
          {
            "name": "writable_indexes",
            "docs": [
              "List of indexes used to load writable accounts."
            ],
            "type": "bytes"
          },
          {
            "name": "readonly_indexes",
            "docs": [
              "List of indexes used to load readonly accounts."
            ],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "SmartAccountSigner",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": "pubkey"
          },
          {
            "name": "permissions",
            "type": {
              "defined": {
                "name": "Permissions"
              }
            }
          }
        ]
      }
    },
    {
      "name": "SmartAccountTransactionMessage",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "num_signers",
            "docs": [
              "The number of signer pubkeys in the account_keys vec."
            ],
            "type": "u8"
          },
          {
            "name": "num_writable_signers",
            "docs": [
              "The number of writable signer pubkeys in the account_keys vec."
            ],
            "type": "u8"
          },
          {
            "name": "num_writable_non_signers",
            "docs": [
              "The number of writable non-signer pubkeys in the account_keys vec."
            ],
            "type": "u8"
          },
          {
            "name": "account_keys",
            "docs": [
              "Unique account pubkeys (including program IDs) required for execution of the tx.",
              "The signer pubkeys appear at the beginning of the vec, with writable pubkeys first, and read-only pubkeys following.",
              "The non-signer pubkeys follow with writable pubkeys first and read-only ones following.",
              "Program IDs are also stored at the end of the vec along with other non-signer non-writable pubkeys:",
              "",
              "```plaintext",
              "[pubkey1, pubkey2, pubkey3, pubkey4, pubkey5, pubkey6, pubkey7, pubkey8]",
              "|---writable---|  |---readonly---|  |---writable---|  |---readonly---|",
              "|------------signers-------------|  |----------non-singers-----------|",
              "```"
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "instructions",
            "docs": [
              "List of instructions making up the tx."
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "SmartAccountCompiledInstruction"
                }
              }
            }
          },
          {
            "name": "address_table_lookups",
            "docs": [
              "List of address table lookups used to load additional accounts",
              "for this transaction."
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "SmartAccountMessageAddressTableLookup"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "SpendingLimit",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings",
            "docs": [
              "The settings this belongs to."
            ],
            "type": "pubkey"
          },
          {
            "name": "seed",
            "docs": [
              "Key that is used to seed the SpendingLimit PDA."
            ],
            "type": "pubkey"
          },
          {
            "name": "account_index",
            "docs": [
              "The index of the smart account that the spending limit is for."
            ],
            "type": "u8"
          },
          {
            "name": "mint",
            "docs": [
              "The token mint the spending limit is for.",
              "Pubkey::default() means SOL.",
              "use NATIVE_MINT for Wrapped SOL."
            ],
            "type": "pubkey"
          },
          {
            "name": "amount",
            "docs": [
              "The amount of tokens that can be spent in a period.",
              "This amount is in decimals of the mint,",
              "so 1 SOL would be `1_000_000_000` and 1 USDC would be `1_000_000`."
            ],
            "type": "u64"
          },
          {
            "name": "period",
            "docs": [
              "The reset period of the spending limit.",
              "When it passes, the remaining amount is reset, unless it's `Period::OneTime`."
            ],
            "type": {
              "defined": {
                "name": "Period"
              }
            }
          },
          {
            "name": "remaining_amount",
            "docs": [
              "The remaining amount of tokens that can be spent in the current period.",
              "When reaches 0, the spending limit cannot be used anymore until the period reset."
            ],
            "type": "u64"
          },
          {
            "name": "last_reset",
            "docs": [
              "Unix timestamp marking the last time the spending limit was reset (or created)."
            ],
            "type": "i64"
          },
          {
            "name": "bump",
            "docs": [
              "PDA bump."
            ],
            "type": "u8"
          },
          {
            "name": "signers",
            "docs": [
              "Signers that can use the spending limit."
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "destinations",
            "docs": [
              "The destination addresses the spending limit is allowed to sent funds to.",
              "If empty, funds can be sent to any address."
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "expiration",
            "docs": [
              "The expiration timestamp of the spending limit."
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "SyncSettingsTransactionArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "num_signers",
            "docs": [
              "The number of signers to reach threshold and adequate permissions"
            ],
            "type": "u8"
          },
          {
            "name": "actions",
            "docs": [
              "The settings actions to execute"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "SettingsAction"
                }
              }
            }
          },
          {
            "name": "memo",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "SyncTransactionArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_index",
            "docs": [
              "The index of the smart account this transaction is for"
            ],
            "type": "u8"
          },
          {
            "name": "num_signers",
            "docs": [
              "The number of signers to reach threshold and adequate permissions"
            ],
            "type": "u8"
          },
          {
            "name": "instructions",
            "docs": [
              "Expected to be serialized as a Vec<u8, CompiledInstruction>"
            ],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "Transaction",
      "docs": [
        "Stores data required for tracking the voting and execution status of a smart",
        "account transaction.",
        "Smart Account transaction is a transaction that's executed on behalf of the",
        "smart account PDA",
        "and wraps arbitrary Solana instructions, typically calling into other Solana programs."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings",
            "docs": [
              "The settings this belongs to."
            ],
            "type": "pubkey"
          },
          {
            "name": "creator",
            "docs": [
              "Signer of the Smart Account who submitted the transaction."
            ],
            "type": "pubkey"
          },
          {
            "name": "rent_collector",
            "docs": [
              "The rent collector for the transaction account."
            ],
            "type": "pubkey"
          },
          {
            "name": "index",
            "docs": [
              "Index of this transaction within the smart account."
            ],
            "type": "u64"
          },
          {
            "name": "bump",
            "docs": [
              "bump for the transaction seeds."
            ],
            "type": "u8"
          },
          {
            "name": "account_index",
            "docs": [
              "The account index of the smart account this transaction belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "account_bump",
            "docs": [
              "Derivation bump of the smart account PDA this transaction belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "ephemeral_signer_bumps",
            "docs": [
              "Derivation bumps for additional signers.",
              "Some transactions require multiple signers. Often these additional signers are \"ephemeral\" keypairs",
              "that are generated on the client with a sole purpose of signing the transaction and be discarded immediately after.",
              "When wrapping such transactions into smart account ones, we replace these \"ephemeral\" signing keypairs",
              "with PDAs derived from the SmartAccountTransaction's `transaction_index`",
              "and controlled by the Smart Account Program;",
              "during execution the program includes the seeds of these PDAs into the `invoke_signed` calls,",
              "thus \"signing\" on behalf of these PDAs."
            ],
            "type": "bytes"
          },
          {
            "name": "message",
            "docs": [
              "data required for executing the transaction."
            ],
            "type": {
              "defined": {
                "name": "SmartAccountTransactionMessage"
              }
            }
          }
        ]
      }
    },
    {
      "name": "TransactionBuffer",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "settings",
            "docs": [
              "The settings this belongs to."
            ],
            "type": "pubkey"
          },
          {
            "name": "creator",
            "docs": [
              "Signer of the smart account who created the TransactionBuffer."
            ],
            "type": "pubkey"
          },
          {
            "name": "buffer_index",
            "docs": [
              "Index to seed address derivation"
            ],
            "type": "u8"
          },
          {
            "name": "account_index",
            "docs": [
              "Smart account index of the transaction this buffer belongs to."
            ],
            "type": "u8"
          },
          {
            "name": "final_buffer_hash",
            "docs": [
              "Hash of the final assembled transaction message."
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "final_buffer_size",
            "docs": [
              "The size of the final assembled transaction message."
            ],
            "type": "u16"
          },
          {
            "name": "buffer",
            "docs": [
              "The buffer of the transaction message."
            ],
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "UseSpendingLimitArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "amount",
            "docs": [
              "Amount of tokens to transfer."
            ],
            "type": "u64"
          },
          {
            "name": "decimals",
            "docs": [
              "Decimals of the token mint. Used for double-checking against incorrect order of magnitude of `amount`."
            ],
            "type": "u8"
          },
          {
            "name": "memo",
            "docs": [
              "Memo used for indexing."
            ],
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "VoteOnProposalArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "memo",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    }
  ]
}