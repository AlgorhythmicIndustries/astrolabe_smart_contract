//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use solana_pubkey::Pubkey;
use crate::generated::types::SmartAccountCompiledInstruction;
use crate::generated::types::SmartAccountMessageAddressTableLookup;
use borsh::BorshSerialize;
use borsh::BorshDeserialize;

#[derive(BorshSerialize, BorshDeserialize, Clone, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct SmartAccountTransactionMessage {
/// The number of signer pubkeys in the account_keys vec.
pub num_signers: u8,
/// The number of writable signer pubkeys in the account_keys vec.
pub num_writable_signers: u8,
/// The number of writable non-signer pubkeys in the account_keys vec.
pub num_writable_non_signers: u8,
/// Unique account pubkeys (including program IDs) required for execution of the tx.
/// The signer pubkeys appear at the beginning of the vec, with writable pubkeys first, and read-only pubkeys following.
/// The non-signer pubkeys follow with writable pubkeys first and read-only ones following.
/// Program IDs are also stored at the end of the vec along with other non-signer non-writable pubkeys:
/// 
/// ```plaintext
/// [pubkey1, pubkey2, pubkey3, pubkey4, pubkey5, pubkey6, pubkey7, pubkey8]
/// |---writable---|  |---readonly---|  |---writable---|  |---readonly---|
/// |------------signers-------------|  |----------non-singers-----------|
/// ```
#[cfg_attr(feature = "serde", serde(with = "serde_with::As::<Vec<serde_with::DisplayFromStr>>"))]
pub account_keys: Vec<Pubkey>,
/// List of instructions making up the tx.
pub instructions: Vec<SmartAccountCompiledInstruction>,
/// List of address table lookups used to load additional accounts
/// for this transaction.
pub address_table_lookups: Vec<SmartAccountMessageAddressTableLookup>,
}


