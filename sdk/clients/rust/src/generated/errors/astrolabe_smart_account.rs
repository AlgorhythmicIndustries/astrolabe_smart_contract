//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum AstrolabeSmartAccountError {
    /// 6000 - Account is not empty
    #[error("Account is not empty")]
    AccountNotEmpty = 0x1770,
    /// 6001 - Found multiple signers with the same pubkey
    #[error("Found multiple signers with the same pubkey")]
    DuplicateSigner = 0x1771,
    /// 6002 - Signers array is empty
    #[error("Signers array is empty")]
    EmptySigners = 0x1772,
    /// 6003 - Too many signers, can be up to 65535
    #[error("Too many signers, can be up to 65535")]
    TooManySigners = 0x1773,
    /// 6004 - Invalid threshold, must be between 1 and number of signers with vote permissions
    #[error("Invalid threshold, must be between 1 and number of signers with vote permissions")]
    InvalidThreshold = 0x1774,
    /// 6005 - Attempted to perform an unauthorized action
    #[error("Attempted to perform an unauthorized action")]
    Unauthorized = 0x1775,
    /// 6006 - Provided pubkey is not a signer of the smart account
    #[error("Provided pubkey is not a signer of the smart account")]
    NotASigner = 0x1776,
    /// 6007 - TransactionMessage is malformed.
    #[error("TransactionMessage is malformed.")]
    InvalidTransactionMessage = 0x1777,
    /// 6008 - Proposal is stale
    #[error("Proposal is stale")]
    StaleProposal = 0x1778,
    /// 6009 - Invalid proposal status
    #[error("Invalid proposal status")]
    InvalidProposalStatus = 0x1779,
    /// 6010 - Invalid transaction index
    #[error("Invalid transaction index")]
    InvalidTransactionIndex = 0x177A,
    /// 6011 - Signer already approved the transaction
    #[error("Signer already approved the transaction")]
    AlreadyApproved = 0x177B,
    /// 6012 - Signer already rejected the transaction
    #[error("Signer already rejected the transaction")]
    AlreadyRejected = 0x177C,
    /// 6013 - Signer already cancelled the transaction
    #[error("Signer already cancelled the transaction")]
    AlreadyCancelled = 0x177D,
    /// 6014 - Wrong number of accounts provided
    #[error("Wrong number of accounts provided")]
    InvalidNumberOfAccounts = 0x177E,
    /// 6015 - Invalid account provided
    #[error("Invalid account provided")]
    InvalidAccount = 0x177F,
    /// 6016 - Cannot remove last signer
    #[error("Cannot remove last signer")]
    RemoveLastSigner = 0x1780,
    /// 6017 - Signers don't include any voters
    #[error("Signers don't include any voters")]
    NoVoters = 0x1781,
    /// 6018 - Signers don't include any proposers
    #[error("Signers don't include any proposers")]
    NoProposers = 0x1782,
    /// 6019 - Signers don't include any executors
    #[error("Signers don't include any executors")]
    NoExecutors = 0x1783,
    /// 6020 - `stale_transaction_index` must be <= `transaction_index`
    #[error("`stale_transaction_index` must be <= `transaction_index`")]
    InvalidStaleTransactionIndex = 0x1784,
    /// 6021 - Instruction not supported for controlled smart account
    #[error("Instruction not supported for controlled smart account")]
    NotSupportedForControlled = 0x1785,
    /// 6022 - Proposal time lock has not been released
    #[error("Proposal time lock has not been released")]
    TimeLockNotReleased = 0x1786,
    /// 6023 - Config transaction must have at least one action
    #[error("Config transaction must have at least one action")]
    NoActions = 0x1787,
    /// 6024 - Missing account
    #[error("Missing account")]
    MissingAccount = 0x1788,
    /// 6025 - Invalid mint
    #[error("Invalid mint")]
    InvalidMint = 0x1789,
    /// 6026 - Invalid destination
    #[error("Invalid destination")]
    InvalidDestination = 0x178A,
    /// 6027 - Spending limit exceeded
    #[error("Spending limit exceeded")]
    SpendingLimitExceeded = 0x178B,
    /// 6028 - Decimals don't match the mint
    #[error("Decimals don't match the mint")]
    DecimalsMismatch = 0x178C,
    /// 6029 - Spending limit is expired
    #[error("Spending limit is expired")]
    SpendingLimitExpired = 0x178D,
    /// 6030 - Signer has unknown permission
    #[error("Signer has unknown permission")]
    UnknownPermission = 0x178E,
    /// 6031 - Account is protected, it cannot be passed into a CPI as writable
    #[error("Account is protected, it cannot be passed into a CPI as writable")]
    ProtectedAccount = 0x178F,
    /// 6032 - Time lock exceeds the maximum allowed (90 days)
    #[error("Time lock exceeds the maximum allowed (90 days)")]
    TimeLockExceedsMaxAllowed = 0x1790,
    /// 6033 - Account is not owned by Smart Account program
    #[error("Account is not owned by Smart Account program")]
    IllegalAccountOwner = 0x1791,
    /// 6034 - Rent reclamation is disabled for this smart account
    #[error("Rent reclamation is disabled for this smart account")]
    RentReclamationDisabled = 0x1792,
    /// 6035 - Invalid rent collector address
    #[error("Invalid rent collector address")]
    InvalidRentCollector = 0x1793,
    /// 6036 - Proposal is for another smart account
    #[error("Proposal is for another smart account")]
    ProposalForAnotherSmartAccount = 0x1794,
    /// 6037 - Transaction is for another smart account
    #[error("Transaction is for another smart account")]
    TransactionForAnotherSmartAccount = 0x1795,
    /// 6038 - Transaction doesn't match proposal
    #[error("Transaction doesn't match proposal")]
    TransactionNotMatchingProposal = 0x1796,
    /// 6039 - Transaction is not last in batch
    #[error("Transaction is not last in batch")]
    TransactionNotLastInBatch = 0x1797,
    /// 6040 - Batch is not empty
    #[error("Batch is not empty")]
    BatchNotEmpty = 0x1798,
    /// 6041 - Invalid SpendingLimit amount
    #[error("Invalid SpendingLimit amount")]
    SpendingLimitInvalidAmount = 0x1799,
    /// 6042 - Invalid Instruction Arguments
    #[error("Invalid Instruction Arguments")]
    InvalidInstructionArgs = 0x179A,
    /// 6043 - Final message buffer hash doesnt match the expected hash
    #[error("Final message buffer hash doesnt match the expected hash")]
    FinalBufferHashMismatch = 0x179B,
    /// 6044 - Final buffer size cannot exceed 4000 bytes
    #[error("Final buffer size cannot exceed 4000 bytes")]
    FinalBufferSizeExceeded = 0x179C,
    /// 6045 - Final buffer size mismatch
    #[error("Final buffer size mismatch")]
    FinalBufferSizeMismatch = 0x179D,
    /// 6046 - smart_account_create has been deprecated. Use smart_account_create_v2 instead.
    #[error("smart_account_create has been deprecated. Use smart_account_create_v2 instead.")]
    SmartAccountCreateDeprecated = 0x179E,
    /// 6047 - Signers do not reach consensus threshold
    #[error("Signers do not reach consensus threshold")]
    ThresholdNotReached = 0x179F,
    /// 6048 - Invalid number of signer accounts. Must be greater or equal to the threshold
    #[error("Invalid number of signer accounts. Must be greater or equal to the threshold")]
    InvalidSignerCount = 0x17A0,
    /// 6049 - Missing signature
    #[error("Missing signature")]
    MissingSignature = 0x17A1,
    /// 6050 - Insufficient aggregate permissions across signing members
    #[error("Insufficient aggregate permissions across signing members")]
    InsufficientAggregatePermissions = 0x17A2,
    /// 6051 - Insufficient vote permissions across signing members
    #[error("Insufficient vote permissions across signing members")]
    InsufficientVotePermissions = 0x17A3,
    /// 6052 - Smart account must not be time locked
    #[error("Smart account must not be time locked")]
    TimeLockNotZero = 0x17A4,
    /// 6053 - Feature not implemented
    #[error("Feature not implemented")]
    NotImplemented = 0x17A5,
}

impl From<AstrolabeSmartAccountError> for solana_program_error::ProgramError {
    fn from(e: AstrolabeSmartAccountError) -> Self {
        solana_program_error::ProgramError::Custom(e as u32)
    }
}

