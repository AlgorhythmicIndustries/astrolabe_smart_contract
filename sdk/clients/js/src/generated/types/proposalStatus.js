"use strict";
/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProposalStatusEncoder = getProposalStatusEncoder;
exports.getProposalStatusDecoder = getProposalStatusDecoder;
exports.getProposalStatusCodec = getProposalStatusCodec;
exports.proposalStatus = proposalStatus;
exports.isProposalStatus = isProposalStatus;
var kit_1 = require("@solana/kit");
function getProposalStatusEncoder() {
    return (0, kit_1.getDiscriminatedUnionEncoder)([
        ['Draft', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Active', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Rejected', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Approved', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Executing', (0, kit_1.getUnitEncoder)()],
        ['Executed', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
        ['Cancelled', (0, kit_1.getStructEncoder)([['timestamp', (0, kit_1.getI64Encoder)()]])],
    ]);
}
function getProposalStatusDecoder() {
    return (0, kit_1.getDiscriminatedUnionDecoder)([
        ['Draft', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Active', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Rejected', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Approved', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Executing', (0, kit_1.getUnitDecoder)()],
        ['Executed', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
        ['Cancelled', (0, kit_1.getStructDecoder)([['timestamp', (0, kit_1.getI64Decoder)()]])],
    ]);
}
function getProposalStatusCodec() {
    return (0, kit_1.combineCodec)(getProposalStatusEncoder(), getProposalStatusDecoder());
}
function proposalStatus(kind, data) {
    return Array.isArray(data)
        ? { __kind: kind, fields: data }
        : __assign({ __kind: kind }, (data !== null && data !== void 0 ? data : {}));
}
function isProposalStatus(kind, value) {
    return value.__kind === kind;
}
