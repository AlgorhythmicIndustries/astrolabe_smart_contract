/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beet from '@metaplex-foundation/beet'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import {
  SmartAccountSigner,
  smartAccountSignerBeet,
} from './SmartAccountSigner'
import {
  RestrictedSmartAccountSigner,
  restrictedSmartAccountSignerBeet,
} from './RestrictedSmartAccountSigner'
export type CreateSmartAccountArgs = {
  settingsAuthority: beet.COption<web3.PublicKey>
  threshold: number
  signers: SmartAccountSigner[]
  restrictedSigners: RestrictedSmartAccountSigner[]
  timeLock: number
  rentCollector: beet.COption<web3.PublicKey>
  memo: beet.COption<string>
}

/**
 * @category userTypes
 * @category generated
 */
export const createSmartAccountArgsBeet =
  new beet.FixableBeetArgsStruct<CreateSmartAccountArgs>(
    [
      ['settingsAuthority', beet.coption(beetSolana.publicKey)],
      ['threshold', beet.u16],
      ['signers', beet.array(smartAccountSignerBeet)],
      ['restrictedSigners', beet.array(restrictedSmartAccountSignerBeet)],
      ['timeLock', beet.u32],
      ['rentCollector', beet.coption(beetSolana.publicKey)],
      ['memo', beet.coption(beet.utf8String)],
    ],
    'CreateSmartAccountArgs'
  )
